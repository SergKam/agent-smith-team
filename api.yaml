openapi: 3.0.0
info:
  title: agent-smith-team
  description: API for managing tasks with advanced features in a task management system
  version: 1.1.0

servers:
  - url: https://api.enhancedtaskmanager.com/v1

paths:
  /tasks:
    get:
      summary: List all tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{taskId}:
    get:
      summary: Get a specific task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    
    put:
      summary: Update a specific task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    
    delete:
      summary: Delete a specific task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found

  /tasks/{taskId}/comments:
    get:
      summary: Get comments for a specific task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    
    post:
      summary: Add a comment to a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        '201':
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [pending, in_progress, completed]
        type:
          type: string
          enum: [story, task, question, bug]
        priority:
          type: string
          enum: [low, medium, high, critical]
        assignedTo:
          type: integer
          description: User ID of the assigned user
        relations:
          type: array
          items:
            $ref: '#/components/schemas/TaskRelation'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TaskInput:
      type: object
      required:
        - title
        - type
        - priority
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [pending, in_progress, completed]
          default: pending
        type:
          type: string
          enum: [story, task, question, bug]
        priority:
          type: string
          enum: [low, medium, high, critical]
        assignedTo:
          type: integer
        relations:
          type: array
          items:
            $ref: '#/components/schemas/TaskRelation'

    TaskRelation:
      type: object
      properties:
        relatedTaskId:
          type: integer
        relationType:
          type: string
          enum: [child, parent, related, blocked]

    Comment:
      type: object
      properties:
        id:
          type: integer
        taskId:
          type: integer
        userId:
          type: integer
        content:
          type: string
        createdAt:
          type: string
          format: date-time

    CommentInput:
      type: object
      required:
        - content
        - userId
      properties:
        content:
          type: string
        userId:
          type: integer
